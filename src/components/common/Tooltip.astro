---
import "tippy.js/dist/tippy.css";
import "tippy.js/animations/scale.css";
import type { Placement } from "tippy.js";

const { text, placement, delay, arrow } = Astro.props;

export interface Props {
  /** The text to display in the tooltip */
  text: string;
  /** Where to place the tooltip relative to the element */
  placement?: Placement;
  /** Delay in milliseconds between showing and hiding */
  delay?: string;
  /** Whether or not the tooltip should have an arrow pointing to the target element */
  arrow?: string;
}
---

<span
  class="tooltip"
  data-tooltip-text={text}
  data-tooltip-placement={placement}
  data-tooltip-delay={delay}
  data-tooltip-arrow={arrow}
>
  <slot />
</span>

<style lang="scss">
  span.tooltip {
    display: inline-flex;
    width: fit-content;
  }
</style>

<script>
  import tippy from "tippy.js";
  import type { Placement } from "tippy.js";

  const elements = document.querySelectorAll(".tooltip");

  for (const el of elements) {
    tippy(el, {
      animation: "scale",
      content: el.getAttribute("data-tooltip-text") ?? "Oops",
      placement: (el.getAttribute("data-tooltip-placement") ??
        "top") as Placement,
      delay: JSON.parse(el.getAttribute("data-tooltip-delay") as string),
      arrow: (el.getAttribute("data-tooltip-arrow") ?? "true") === "true",
    });
  }
</script>
