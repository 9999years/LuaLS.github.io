---
import { getCollection } from "astro:content";

import Layout from "../../layouts/WikiArticle.astro";
import CodeBlock from "../../components/common/CodeBlock.astro";
import WikiLink from "../../components/wiki/WikiLink.astro";
import Remark from "../../components/common/Remark.astro";
import type { CollectionEntry } from "astro:content";

export const getStaticPaths = async () => {
  const articles = await getCollection("wiki");
  return articles.map((article) => {
    return { params: { slug: article.slug }, props: { article } };
  });
};

const { article } = Astro.props;

const { Content, headings } = await article.render();

const slug = article.data.title.toLowerCase().replaceAll(" ", "-");

export interface Props {
  article: CollectionEntry<"wiki">;
}
---

<Layout article={article} headings={headings}>
  {
    article.data.incomplete && (
      <Remark type="WIP">
        <p>This document is in an incomplete state and info may be missing.</p>
      </Remark>
    )
  }
  <div class="metadata">
    <h1 id={slug}>{article.data.title}</h1>
    <p>{article.data.description}</p>
  </div>
  <Content components={{ pre: CodeBlock, a: WikiLink }} />
</Layout>
